<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>闲言碎语 on curve</title>
    <link>/tags/%E9%97%B2%E8%A8%80%E7%A2%8E%E8%AF%AD/</link>
    <description>Recent content in 闲言碎语 on curve</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/%E9%97%B2%E8%A8%80%E7%A2%8E%E8%AF%AD/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Forcats 和 stringsAsFactors</title>
      <link>/2018/04/17/forcats-stringsasfactors/</link>
      <pubDate>Tue, 17 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/17/forcats-stringsasfactors/</guid>
      <description>今天来聊聊 forcats 包和 stringsAsFactors。
一切起因是在我给 map 添加图例的时候发现，分类变量(factor)有大概有快二十个。作为一个完美主义者，自然不能接受一长溜的图例，更重要的其中掺杂一些无足轻重的变量。这时我便想到了 forcats 包中的 fct_collapse() 函数，将其中一些变量折叠(collapse)成“其他”。
library(forcats) partyid2 &amp;lt;- fct_collapse(gss_cat$partyid, missing = c(&amp;quot;No answer&amp;quot;, &amp;quot;Don&amp;#39;t know&amp;quot;), other = &amp;quot;Other party&amp;quot;, rep = c(&amp;quot;Strong republican&amp;quot;, &amp;quot;Not str republican&amp;quot;), ind = c(&amp;quot;Ind,near rep&amp;quot;, &amp;quot;Independent&amp;quot;, &amp;quot;Ind,near dem&amp;quot;), dem = c(&amp;quot;Not str democrat&amp;quot;, &amp;quot;Strong democrat&amp;quot;) ) 看了眼示例，脑补了一下
fct_collapse(factor, A = A, B = B, ... , other = c(K, L, ...) ) 放弃了。坚持不懈的我发现了 frc_lump(). tips：lump(使成块状)。
x &amp;lt;- factor(rep(LETTERS[1:9], times = c(40, 10, 5, 27, 1, 1, 1, 1, 1))) x %&amp;gt;% table() ## .</description>
    </item>
    
    <item>
      <title>AWS</title>
      <link>/2018/04/15/aws/</link>
      <pubDate>Sun, 15 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/15/aws/</guid>
      <description>AWS &amp;amp; Shiny-server 从第一次见到 Shiny 到现在，Shiny 都一直都深深地吸引着我。你不必懂 JavaScript、CSS 和 HTML 就可生成可交互的 APP。
但是 Shiny 学习起来并不轻松，同时将 Shiny app 部署到网络上， 并分享给朋友也并不是一件容易的事情。虽然 Rstudio 贴心的提供了 shinyapps.io，配合上 Rstudio 可以轻松部署到 web 上。但是免费套餐的诸多限制，和以美元结算的套餐似乎都不是完美是选择。 好在AWS有免费的 EC-2 可以部署服务器，配置 Shiny-server。
但是作为一个非计算机专业的学生，面对着通过的 ssh 连接到 Ubuntu 虚拟机的命令行，让习惯了用 GUI 的系统的我着实一脸懵逼。经过了一番捣鼓，最后还是通过 Louis Aslett 友人提供的 RStudio Server Amazon Machine Image，避免了在完全不熟悉的 Ubuntu 上配置 R、Rstudio-server 和 shiny—server 的麻烦。事实上最初就是卡在这里了。
现在，我们可以通过 web 在浏览器上端访问 Rstudio 愉快地制作 shiny app 了。
附上半年前做的一个关于自改革开放以来的各省人均 GDP 的 APP。</description>
    </item>
    
    <item>
      <title>我的第一篇博客?</title>
      <link>/2018/04/05/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/05/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</guid>
      <description>虽然并不知道要说些什么, 但不管怎么说第一篇博客终究还是要纪念一下的。
依稀记得学生时代被语文作文支配的恐惧。纠结来纠结去，最后草草了事。现在想想完美主义与生产力多半是冲突的。
以我对我的了解，三分钟热度的我不知道能坚持写几天博客，如果我坚持下来的话，那么就得好好思考思考是我变了，还是写博客有着神奇的魔力。
博客！写什么？随便啦。
如果日后我成为了作家，那我应该会被归类到意识流？
最后，虽然人是善变的，但是这么多年了，我依然想说：下雨天真的是好烦！</description>
    </item>
    
  </channel>
</rss>